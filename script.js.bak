// === Input Form Contact ===
document.addEventListener("DOMContentLoaded", () => {
  const form = document.getElementById("contactForm");
  const popup = document.getElementById("popupMessage");
  const popupText = document.getElementById("popupText");
  const popupClose = document.getElementById("popupClose");

  form.addEventListener("submit", async (e) => {
    e.preventDefault(); // cegah reload

    const formData = new FormData(form);

    try {
      const response = await fetch("backend/save_leads.php", {
        method: "POST",
        body: formData
      });

      const result = await response.text();
      console.log("Server response:", result);

      if (result.toLowerCase().includes("success")) {
        showPopup("Data berhasil dikirim!", "success");
        form.reset();
      } else {
        showPopup("Gagal mengirim data, silakan coba lagi.", "error");
      }
    } catch (err) {
      console.error(err);
      showPopup("Terjadi kesalahan koneksi ke server.", "error");
    }
  });

  function showPopup(message, type) {
    popupText.textContent = message;
    popup.classList.remove("success", "error");
    popup.classList.add(type);
    popup.style.display = "flex";

    setTimeout(() => {
      popup.style.display = "none";
    }, 3000);
  }

  popupClose.addEventListener("click", () => {
    popup.style.display = "none";
  });
});

// Animasi Fade-in ketika halaman dimuat
document.addEventListener("DOMContentLoaded", () => {
  const fadeElements = document.querySelectorAll(".fade-in");

  const observer = new IntersectionObserver(entries => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add("visible");
        observer.unobserve(entry.target);
      }
    });
  }, { threshold: 0.2 });

  fadeElements.forEach(el => observer.observe(el));
});

document.addEventListener("DOMContentLoaded", () => {
  const fadeElements = document.querySelectorAll(".fade-in-right");

  const observer = new IntersectionObserver(entries => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add("visible-right");
        observer.unobserve(entry.target);
      }
    });
  }, { threshold: 0.2 });

  fadeElements.forEach(el => observer.observe(el));
});

document.addEventListener("DOMContentLoaded", () => {
  const fadeElements = document.querySelectorAll(".fade-in-left");

  const observer = new IntersectionObserver(entries => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add("visible-left");
        observer.unobserve(entry.target);
      }
    });
  }, { threshold: 0.2 });

  fadeElements.forEach(el => observer.observe(el));
});

// === Rotator WA ===
// === Daftar nomor CS WhatsApp ===
const csNumbers = [
  "6281111111111", // CS A
  "6282222222222", // CS B
  "6283333333333"  // CS C
];

// === Fungsi Rotator ===
document.getElementById("whatsappButton").addEventListener("click", function (e) {
  e.preventDefault(); // cegah link default

  // Ambil index terakhir dari localStorage
  let lastIndex = localStorage.getItem("csIndex");
  lastIndex = lastIndex ? parseInt(lastIndex) : -1;

  // Tentukan index berikutnya
  let nextIndex = (lastIndex + 1) % csNumbers.length;

  // Simpan index baru ke localStorage
  localStorage.setItem("csIndex", nextIndex);

  // Nomor CS berikutnya
  const nextNumber = csNumbers[nextIndex];

  // Pesan default WA (opsional)
  const defaultMessage = encodeURIComponent("Halo, saya ingin bertanya mengenai layanan Fulfillin.");

  // Redirect ke WhatsApp
  const waLink = `https://wa.me/${nextNumber}?text=${defaultMessage}`;
  window.open(waLink, "_blank");
});